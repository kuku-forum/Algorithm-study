'''
정확성  테스트
테스트 1 〉	통과 (0.00ms, 10.3MB)
테스트 2 〉	통과 (0.00ms, 10.3MB)
테스트 3 〉	통과 (0.01ms, 10.3MB)
테스트 4 〉	통과 (0.02ms, 10.2MB)
테스트 5 〉	통과 (0.01ms, 10.3MB)
테스트 6 〉	통과 (0.01ms, 10.3MB)
테스트 7 〉	통과 (0.57ms, 10.3MB)
테스트 8 〉	통과 (0.56ms, 10.3MB)
테스트 9 〉	통과 (0.58ms, 10.2MB)
테스트 10 〉	통과 (0.60ms, 10.3MB)
테스트 11 〉	통과 (0.59ms, 10.4MB)
테스트 12 〉	통과 (1.23ms, 10.3MB)
테스트 13 〉	통과 (0.56ms, 10.3MB)
테스트 14 〉	통과 (0.65ms, 10.4MB)
테스트 15 〉	통과 (0.59ms, 10.3MB)
테스트 16 〉	통과 (0.68ms, 10.3MB)
테스트 17 〉	통과 (0.91ms, 10.3MB)
테스트 18 〉	통과 (0.58ms, 10.3MB)
테스트 19 〉	통과 (0.60ms, 10.3MB)
테스트 20 〉	통과 (0.75ms, 10.3MB)
테스트 21 〉	통과 (0.61ms, 10.3MB)
테스트 22 〉	통과 (0.64ms, 10.3MB)
테스트 23 〉	통과 (0.57ms, 10.3MB)
테스트 24 〉	통과 (0.56ms, 10.4MB)
테스트 25 〉	통과 (0.62ms, 10.3MB)
테스트 26 〉	통과 (0.56ms, 10.3MB)
테스트 27 〉	통과 (0.84ms, 10.3MB)
테스트 28 〉	통과 (0.57ms, 10.3MB)
테스트 29 〉	통과 (0.58ms, 10.3MB)
테스트 30 〉	통과 (0.59ms, 10.3MB)
테스트 31 〉	통과 (0.57ms, 10.3MB)
테스트 32 〉	통과 (0.70ms, 10.3MB)
테스트 33 〉	통과 (0.00ms, 10.3MB)
효율성  테스트
테스트 1 〉	통과 (56.65ms, 16.6MB)
테스트 2 〉	통과 (64.91ms, 16.5MB)
테스트 3 〉	통과 (62.87ms, 16.6MB)
테스트 4 〉	통과 (64.88ms, 16.1MB)
'''
def solution(sticker):
    answer = 0
    
    dp_1 = [num for num in sticker]
    dp_2 = [num for num in sticker]
    if len(sticker) <= 3:
        return max(sticker)
    
    dp_1[1] = max(dp_1[0], dp_1[1])
    dp_2[2] = max(dp_2[1], dp_2[2])
    
    for i in range(2, len(sticker)-1):
        dp_1[i] = max(dp_1[i-1], dp_1[i-2] + dp_1[i])
    
    for i in range(3, len(sticker)):
        dp_2[i] = max(dp_2[i-1], dp_2[i-2] + dp_2[i])
    
    return max(dp_1[-2], dp_2[-1])