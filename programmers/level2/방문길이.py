'''
정확성  테스트
테스트 1 〉	통과 (0.04ms, 10.2MB)
테스트 2 〉	통과 (0.01ms, 10.2MB)
테스트 3 〉	통과 (0.01ms, 10.2MB)
테스트 4 〉	통과 (0.06ms, 10.2MB)
테스트 5 〉	통과 (0.06ms, 10.2MB)
테스트 6 〉	통과 (0.06ms, 10.1MB)
테스트 7 〉	통과 (0.02ms, 10.2MB)
테스트 8 〉	통과 (0.03ms, 10.2MB)
테스트 9 〉	통과 (0.03ms, 10.3MB)
테스트 10 〉	통과 (0.05ms, 10.2MB)
테스트 11 〉	통과 (0.03ms, 10.2MB)
테스트 12 〉	통과 (0.06ms, 10.3MB)
테스트 13 〉	통과 (0.05ms, 10.1MB)
테스트 14 〉	통과 (0.05ms, 10.1MB)
테스트 15 〉	통과 (0.05ms, 10.1MB)
테스트 16 〉	통과 (0.21ms, 10.2MB)
테스트 17 〉	통과 (0.22ms, 10.3MB)
테스트 18 〉	통과 (0.25ms, 10.2MB)
테스트 19 〉	통과 (0.42ms, 10.2MB)
테스트 20 〉	통과 (0.23ms, 10.1MB)
'''
def solution(dirs):
    
    visited = set()
    y, x = 0, 0
    
    dic = {'U': (1, 0), 'D': (-1, 0), 'R': (0, 1), 'L': (0, -1)}
    
    for dir in dirs:
        n_y = y + dic[dir][0]
        n_x = x + dic[dir][1]
        
        if 5 >= n_y >= -5 and 5 >= n_x >= -5:
            visited.add((y, x, n_y, n_x))
            visited.add((n_y, n_x, y, x))
            y = n_y
            x = n_x
    
    return len(visited) // 2
